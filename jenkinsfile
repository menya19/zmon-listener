@Library('retort-lib') _
def label = "jenkins-${UUID.randomUUID().toString()}"

podTemplate(label:label,
    containers: [
        containerTemplate(name: 'helm', image: 'lachlanevenson/k8s-helm', ttyEnabled: true, command: 'cat')
    ],
    volumes: [
        configMapVolume(mountPath: '/var/config/menya-test', configMapName: 'zmon-kube-config')
    ]) {

    node(label) {
        stage('SOURCE CHECKOUT') {
            def repo = checkout scm
        }

        stage('HELM') {
            container('helm') {
              withEnv(['KUBECONFIG=/var/config/menya-test/kube-config-zmon.yml']) {
                withFolderProperties{
                  yaml.update file: 'values.yaml', update: ['.config.inputs[0].http_listener.basic_username': "${TENANT}", '.config.inputs[0].http_listener.basic_password': "${PASSWORD}", '.config.outputs[0].kafka.brokers[0]':'${env.KAFKA_BROKER_1}', '.config.outputs[0].kafka.brokers[1]':'${env.KAFKA_BROKER_2}', '.config.outputs[0].kafka.brokers[2]':'${env.KAFKA_BROKER_3}', '.config.outputs[0].kafka.topic':"telegraf__${TENANT}"]
                }
                sh "cat values.yaml"
                //sh 'helm install --namespace menya --name listenr-test -f values.yaml .'
              }
            }
        }

    }
}
